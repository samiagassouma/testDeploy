name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: analyse with sonarqube
        uses: SonarSource/sonarqube-scan-action@v6.0.0
        with:
          args: >
            -Dsonar.projectKey=testProject
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build and push FRONTEND image
      - name: Build and Push Frontend Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          platforms: linux/amd64,linux/arm64
          tags: docker.io/gassouma530975/testdeploy:frontend-${{ github.sha }}
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'docker.io/testdeploy:frontend-${{ github.sha }}'
          format: 'table'
          #exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Commit and Push Changes
        run: |
          sed -i "s|gassouma530975/testdeploy:.*|gassouma530975/testdeploy:frontend-${{github.sha}}|" manifests/back.yaml
          # configure user
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          # stage any file changes to be committed
          git add .
          # make commit with staged changes
          git commit -m 'files changed ${{github.sha}}'
          # push the commit back up to source GitHub repository
          git push
